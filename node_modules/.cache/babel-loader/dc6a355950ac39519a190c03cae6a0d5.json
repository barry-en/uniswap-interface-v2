{"ast":null,"code":"import _objectSpread from\"/Users/barry.liu/go/src/uniswap/uniswap-interface-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/Users/barry.liu/go/src/uniswap/uniswap-interface-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/barry.liu/go/src/uniswap/uniswap-interface-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/barry.liu/go/src/uniswap/uniswap-interface-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/barry.liu/go/src/uniswap/uniswap-interface-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/barry.liu/go/src/uniswap/uniswap-interface-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";var _EMPTY_LIST;import{ChainId,Token}from'@uniswap/sdk';import{useMemo}from'react';import{useSelector}from'react-redux';import{DEFAULT_TOKEN_LIST_URL}from'../../constants';/**\n * Token instances created from token info.\n */export var WrappedTokenInfo=/*#__PURE__*/function(_Token){_inherits(WrappedTokenInfo,_Token);var _super=_createSuper(WrappedTokenInfo);function WrappedTokenInfo(tokenInfo){var _this;_classCallCheck(this,WrappedTokenInfo);_this=_super.call(this,tokenInfo.chainId,tokenInfo.address,tokenInfo.decimals,tokenInfo.symbol,tokenInfo.name);_this.tokenInfo=void 0;_this.tokenInfo=tokenInfo;return _this;}_createClass(WrappedTokenInfo,[{key:\"logoURI\",get:function get(){return this.tokenInfo.logoURI;}}]);return WrappedTokenInfo;}(Token);/**\n * An empty result, useful as a default.\n */var EMPTY_LIST=(_EMPTY_LIST={},_defineProperty(_EMPTY_LIST,ChainId.KOVAN,{}),_defineProperty(_EMPTY_LIST,ChainId.RINKEBY,{}),_defineProperty(_EMPTY_LIST,ChainId.ROPSTEN,{}),_defineProperty(_EMPTY_LIST,ChainId.GÖRLI,{}),_defineProperty(_EMPTY_LIST,ChainId.MAINNET,{}),_EMPTY_LIST);var listCache='WeakMap'in window?new WeakMap():null;export function listToTokenMap(list){var result=listCache===null||listCache===void 0?void 0:listCache.get(list);if(result)return result;var map=list.tokens.reduce(function(tokenMap,tokenInfo){var token=new WrappedTokenInfo(tokenInfo);if(tokenMap[token.chainId][token.address]!==undefined)throw Error('Duplicate tokens.');return _objectSpread(_objectSpread({},tokenMap),{},_defineProperty({},token.chainId,_objectSpread(_objectSpread({},tokenMap[token.chainId]),{},_defineProperty({},token.address,token))));},_objectSpread({},EMPTY_LIST));listCache===null||listCache===void 0?void 0:listCache.set(list,map);return map;}export function useTokenList(url){var lists=useSelector(function(state){return state.lists.byUrl;});return useMemo(function(){var _lists$url;var current=(_lists$url=lists[url])===null||_lists$url===void 0?void 0:_lists$url.current;if(!current)return EMPTY_LIST;return listToTokenMap(current);},[lists,url]);}export function useDefaultTokenList(){return useTokenList(DEFAULT_TOKEN_LIST_URL);}// returns all downloaded current lists\nexport function useAllLists(){var lists=useSelector(function(state){return state.lists.byUrl;});return useMemo(function(){return Object.keys(lists).map(function(url){return lists[url].current;}).filter(function(l){return Boolean(l);});},[lists]);}","map":{"version":3,"sources":["/Users/barry.liu/go/src/uniswap/uniswap-interface-v2/src/state/lists/hooks.ts"],"names":["ChainId","Token","useMemo","useSelector","DEFAULT_TOKEN_LIST_URL","WrappedTokenInfo","tokenInfo","chainId","address","decimals","symbol","name","logoURI","EMPTY_LIST","KOVAN","RINKEBY","ROPSTEN","GÖRLI","MAINNET","listCache","window","WeakMap","listToTokenMap","list","result","get","map","tokens","reduce","tokenMap","token","undefined","Error","set","useTokenList","url","lists","state","byUrl","current","useDefaultTokenList","useAllLists","Object","keys","filter","l","Boolean"],"mappings":"mgCAAA,OAASA,OAAT,CAAkBC,KAAlB,KAA+B,cAA/B,CAEA,OAASC,OAAT,KAAwB,OAAxB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,sBAAT,KAAuC,iBAAvC,CAGA;;GAGA,UAAaC,CAAAA,gBAAb,4GAEE,0BAAYC,SAAZ,CAAkC,kDAChC,uBAAMA,SAAS,CAACC,OAAhB,CAAyBD,SAAS,CAACE,OAAnC,CAA4CF,SAAS,CAACG,QAAtD,CAAgEH,SAAS,CAACI,MAA1E,CAAkFJ,SAAS,CAACK,IAA5F,EADgC,MADlBL,SACkB,QAEhC,MAAKA,SAAL,CAAiBA,SAAjB,CAFgC,aAGjC,CALH,gEAM2C,CACvC,MAAO,MAAKA,SAAL,CAAeM,OAAtB,CACD,CARH,8BAAsCX,KAAtC,EAaA;;GAGA,GAAMY,CAAAA,UAA2B,6CAC9Bb,OAAO,CAACc,KADsB,CACd,EADc,8BAE9Bd,OAAO,CAACe,OAFsB,CAEZ,EAFY,8BAG9Bf,OAAO,CAACgB,OAHsB,CAGZ,EAHY,8BAI9BhB,OAAO,CAACiB,KAJsB,CAId,EAJc,8BAK9BjB,OAAO,CAACkB,OALsB,CAKZ,EALY,cAAjC,CAQA,GAAMC,CAAAA,SAAqD,CACzD,WAAaC,CAAAA,MAAb,CAAsB,GAAIC,CAAAA,OAAJ,EAAtB,CAAkE,IADpE,CAGA,MAAO,SAASC,CAAAA,cAAT,CAAwBC,IAAxB,CAA0D,CAC/D,GAAMC,CAAAA,MAAM,CAAGL,SAAH,SAAGA,SAAH,iBAAGA,SAAS,CAAEM,GAAX,CAAeF,IAAf,CAAf,CACA,GAAIC,MAAJ,CAAY,MAAOA,CAAAA,MAAP,CAEZ,GAAME,CAAAA,GAAG,CAAGH,IAAI,CAACI,MAAL,CAAYC,MAAZ,CACV,SAACC,QAAD,CAAWvB,SAAX,CAAyB,CACvB,GAAMwB,CAAAA,KAAK,CAAG,GAAIzB,CAAAA,gBAAJ,CAAqBC,SAArB,CAAd,CACA,GAAIuB,QAAQ,CAACC,KAAK,CAACvB,OAAP,CAAR,CAAwBuB,KAAK,CAACtB,OAA9B,IAA2CuB,SAA/C,CAA0D,KAAMC,CAAAA,KAAK,CAAC,mBAAD,CAAX,CAC1D,sCACKH,QADL,wBAEGC,KAAK,CAACvB,OAFT,gCAGOsB,QAAQ,CAACC,KAAK,CAACvB,OAAP,CAHf,wBAIKuB,KAAK,CAACtB,OAJX,CAIqBsB,KAJrB,KAOD,CAXS,kBAYLjB,UAZK,EAAZ,CAcAM,SAAS,OAAT,EAAAA,SAAS,SAAT,QAAAA,SAAS,CAAEc,GAAX,CAAeV,IAAf,CAAqBG,GAArB,EACA,MAAOA,CAAAA,GAAP,CACD,CAED,MAAO,SAASQ,CAAAA,YAAT,CAAsBC,GAAtB,CAAoD,CACzD,GAAMC,CAAAA,KAAK,CAAGjC,WAAW,CAAuC,SAAAkC,KAAK,QAAIA,CAAAA,KAAK,CAACD,KAAN,CAAYE,KAAhB,EAA5C,CAAzB,CACA,MAAOpC,CAAAA,OAAO,CAAC,UAAM,gBACnB,GAAMqC,CAAAA,OAAO,aAAGH,KAAK,CAACD,GAAD,CAAR,qCAAG,WAAYI,OAA5B,CACA,GAAI,CAACA,OAAL,CAAc,MAAO1B,CAAAA,UAAP,CACd,MAAOS,CAAAA,cAAc,CAACiB,OAAD,CAArB,CACD,CAJa,CAIX,CAACH,KAAD,CAAQD,GAAR,CAJW,CAAd,CAKD,CAED,MAAO,SAASK,CAAAA,mBAAT,EAAgD,CACrD,MAAON,CAAAA,YAAY,CAAC9B,sBAAD,CAAnB,CACD,CAED;AACA,MAAO,SAASqC,CAAAA,WAAT,EAAoC,CACzC,GAAML,CAAAA,KAAK,CAAGjC,WAAW,CAAuC,SAAAkC,KAAK,QAAIA,CAAAA,KAAK,CAACD,KAAN,CAAYE,KAAhB,EAA5C,CAAzB,CAEA,MAAOpC,CAAAA,OAAO,CACZ,iBACEwC,CAAAA,MAAM,CAACC,IAAP,CAAYP,KAAZ,EACGV,GADH,CACO,SAAAS,GAAG,QAAIC,CAAAA,KAAK,CAACD,GAAD,CAAL,CAAWI,OAAf,EADV,EAEGK,MAFH,CAEU,SAACC,CAAD,QAAuBC,CAAAA,OAAO,CAACD,CAAD,CAA9B,EAFV,CADF,EADY,CAKZ,CAACT,KAAD,CALY,CAAd,CAOD","sourcesContent":["import { ChainId, Token } from '@uniswap/sdk'\nimport { TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_TOKEN_LIST_URL } from '../../constants'\nimport { AppState } from '../index'\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n  constructor(tokenInfo: TokenInfo) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n  }\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<{ [chainId in ChainId]: Readonly<{ [tokenAddress: string]: WrappedTokenInfo }> }>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.KOVAN]: {},\n  [ChainId.RINKEBY]: {},\n  [ChainId.ROPSTEN]: {},\n  [ChainId.GÖRLI]: {},\n  [ChainId.MAINNET]: {}\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  'WeakMap' in window ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const token = new WrappedTokenInfo(tokenInfo)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: token\n        }\n      }\n    },\n    { ...EMPTY_LIST }\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useTokenList(url: string): TokenAddressMap {\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>(state => state.lists.byUrl)\n  return useMemo(() => {\n    const current = lists[url]?.current\n    if (!current) return EMPTY_LIST\n    return listToTokenMap(current)\n  }, [lists, url])\n}\n\nexport function useDefaultTokenList(): TokenAddressMap {\n  return useTokenList(DEFAULT_TOKEN_LIST_URL)\n}\n\n// returns all downloaded current lists\nexport function useAllLists(): TokenList[] {\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>(state => state.lists.byUrl)\n\n  return useMemo(\n    () =>\n      Object.keys(lists)\n        .map(url => lists[url].current)\n        .filter((l): l is TokenList => Boolean(l)),\n    [lists]\n  )\n}\n"]},"metadata":{},"sourceType":"module"}