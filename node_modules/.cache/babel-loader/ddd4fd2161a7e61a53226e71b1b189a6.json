{"ast":null,"code":"var _jsxFileName = \"/Users/barry.liu/go/src/uniswap/uniswap-interface-v2/src/components/CurrencyLogo/index.tsx\";\nimport { ETHER, Token } from '@uniswap/sdk';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport EthereumLogo from '../../assets/images/ethereum-logo.png';\nimport { WrappedTokenInfo } from '../../state/lists/hooks';\nimport uriToHttp from '../../utils/uriToHttp';\n\nconst getTokenLogoURL = address => `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${address}/logo.png`;\n\nconst BAD_URIS = {};\nconst Image = styled.img`\n  width: ${({\n  size\n}) => size};\n  height: ${({\n  size\n}) => size};\n  background-color: white;\n  border-radius: 1rem;\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n`;\nconst Emoji = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: ${({\n  size\n}) => size};\n  width: ${({\n  size\n}) => size};\n  height: ${({\n  size\n}) => size};\n  margin-bottom: -4px;\n`;\nconst StyledEthereumLogo = styled.img`\n  width: ${({\n  size\n}) => size};\n  height: ${({\n  size\n}) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  border-radius: 24px;\n`;\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  ...rest\n}) {\n  const [, refresh] = useState(0);\n\n  if (currency === ETHER) {\n    return /*#__PURE__*/React.createElement(StyledEthereumLogo, Object.assign({\n      src: EthereumLogo,\n      size: size\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  if (currency instanceof Token) {\n    let uri;\n\n    if (currency instanceof WrappedTokenInfo) {\n      if (currency.logoURI && !BAD_URIS[currency.logoURI]) {\n        uri = uriToHttp(currency.logoURI).filter(s => !BAD_URIS[s])[0];\n      }\n    }\n\n    if (!uri) {\n      const defaultUri = getTokenLogoURL(currency.address);\n\n      if (!BAD_URIS[defaultUri]) {\n        uri = defaultUri;\n      }\n    }\n\n    if (uri) {\n      return /*#__PURE__*/React.createElement(Image, Object.assign({}, rest, {\n        alt: `${currency.name} Logo`,\n        src: uri,\n        size: size,\n        onError: () => {\n          if (currency instanceof Token) {\n            BAD_URIS[uri] = true;\n          }\n\n          refresh(i => i + 1);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Emoji, Object.assign({}, rest, {\n    size: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"Thinking\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"\\uD83E\\uDD14\"));\n}","map":{"version":3,"sources":["/Users/barry.liu/go/src/uniswap/uniswap-interface-v2/src/components/CurrencyLogo/index.tsx"],"names":["ETHER","Token","React","useState","styled","EthereumLogo","WrappedTokenInfo","uriToHttp","getTokenLogoURL","address","BAD_URIS","Image","img","size","Emoji","span","StyledEthereumLogo","CurrencyLogo","currency","rest","refresh","uri","logoURI","filter","s","defaultUri","name","i"],"mappings":";AAAA,SAAmBA,KAAnB,EAA0BC,KAA1B,QAAuC,cAAvC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AAEA,MAAMC,eAAe,GAAGC,OAAO,IAC5B,2FAA0FA,OAAQ,WADrG;;AAEA,MAAMC,QAA0C,GAAG,EAAnD;AAEA,MAAMC,KAAK,GAAGP,MAAM,CAACQ,GAAsB;WAChC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAcA,IAAK;YAClB,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAcA,IAAK;;;;CAF/B;AAQA,MAAMC,KAAK,GAAGV,MAAM,CAACW,IAAwB;;;;eAI9B,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAcA,IAAK;WACvB,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAcA,IAAK;YAClB,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAcA,IAAK;;CAN/B;AAUA,MAAMG,kBAAkB,GAAGZ,MAAM,CAACQ,GAAsB;WAC7C,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAcA,IAAK;YAClB,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAcA,IAAK;;;CAF/B;AAOA,eAAe,SAASI,YAAT,CAAsB;AACnCC,EAAAA,QADmC;AAEnCL,EAAAA,IAAI,GAAG,MAF4B;AAGnC,KAAGM;AAHgC,CAAtB,EAQZ;AACD,QAAM,GAAGC,OAAH,IAAcjB,QAAQ,CAAS,CAAT,CAA5B;;AAEA,MAAIe,QAAQ,KAAKlB,KAAjB,EAAwB;AACtB,wBAAO,oBAAC,kBAAD;AAAoB,MAAA,GAAG,EAAEK,YAAzB;AAAuC,MAAA,IAAI,EAAEQ;AAA7C,OAAuDM,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAED,MAAID,QAAQ,YAAYjB,KAAxB,EAA+B;AAC7B,QAAIoB,GAAJ;;AAEA,QAAIH,QAAQ,YAAYZ,gBAAxB,EAA0C;AACxC,UAAIY,QAAQ,CAACI,OAAT,IAAoB,CAACZ,QAAQ,CAACQ,QAAQ,CAACI,OAAV,CAAjC,EAAqD;AACnDD,QAAAA,GAAG,GAAGd,SAAS,CAACW,QAAQ,CAACI,OAAV,CAAT,CAA4BC,MAA5B,CAAmCC,CAAC,IAAI,CAACd,QAAQ,CAACc,CAAD,CAAjD,EAAsD,CAAtD,CAAN;AACD;AACF;;AAED,QAAI,CAACH,GAAL,EAAU;AACR,YAAMI,UAAU,GAAGjB,eAAe,CAACU,QAAQ,CAACT,OAAV,CAAlC;;AACA,UAAI,CAACC,QAAQ,CAACe,UAAD,CAAb,EAA2B;AACzBJ,QAAAA,GAAG,GAAGI,UAAN;AACD;AACF;;AAED,QAAIJ,GAAJ,EAAS;AACP,0BACE,oBAAC,KAAD,oBACMF,IADN;AAEE,QAAA,GAAG,EAAG,GAAED,QAAQ,CAACQ,IAAK,OAFxB;AAGE,QAAA,GAAG,EAAEL,GAHP;AAIE,QAAA,IAAI,EAAER,IAJR;AAKE,QAAA,OAAO,EAAE,MAAM;AACb,cAAIK,QAAQ,YAAYjB,KAAxB,EAA+B;AAC7BS,YAAAA,QAAQ,CAACW,GAAD,CAAR,GAAgB,IAAhB;AACD;;AACDD,UAAAA,OAAO,CAACO,CAAC,IAAIA,CAAC,GAAG,CAAV,CAAP;AACD,SAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAcD;AACF;;AAED,sBACE,oBAAC,KAAD,oBAAWR,IAAX;AAAiB,IAAA,IAAI,EAAEN,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAOD","sourcesContent":["import { Currency, ETHER, Token } from '@uniswap/sdk'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport EthereumLogo from '../../assets/images/ethereum-logo.png'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nconst getTokenLogoURL = address =>\n  `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${address}/logo.png`\nconst BAD_URIS: { [tokenAddress: string]: true } = {}\n\nconst Image = styled.img<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  background-color: white;\n  border-radius: 1rem;\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n`\n\nconst Emoji = styled.span<{ size?: string }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: ${({ size }) => size};\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  margin-bottom: -4px;\n`\n\nconst StyledEthereumLogo = styled.img<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  border-radius: 24px;\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  ...rest\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const [, refresh] = useState<number>(0)\n\n  if (currency === ETHER) {\n    return <StyledEthereumLogo src={EthereumLogo} size={size} {...rest} />\n  }\n\n  if (currency instanceof Token) {\n    let uri: string | undefined\n\n    if (currency instanceof WrappedTokenInfo) {\n      if (currency.logoURI && !BAD_URIS[currency.logoURI]) {\n        uri = uriToHttp(currency.logoURI).filter(s => !BAD_URIS[s])[0]\n      }\n    }\n\n    if (!uri) {\n      const defaultUri = getTokenLogoURL(currency.address)\n      if (!BAD_URIS[defaultUri]) {\n        uri = defaultUri\n      }\n    }\n\n    if (uri) {\n      return (\n        <Image\n          {...rest}\n          alt={`${currency.name} Logo`}\n          src={uri}\n          size={size}\n          onError={() => {\n            if (currency instanceof Token) {\n              BAD_URIS[uri] = true\n            }\n            refresh(i => i + 1)\n          }}\n        />\n      )\n    }\n  }\n\n  return (\n    <Emoji {...rest} size={size}>\n      <span role=\"img\" aria-label=\"Thinking\">\n        ðŸ¤”\n      </span>\n    </Emoji>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}